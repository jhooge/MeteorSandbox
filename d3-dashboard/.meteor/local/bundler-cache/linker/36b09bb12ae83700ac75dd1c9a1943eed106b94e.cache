[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nReactiveTable = Package['aslagle:reactive-table'].ReactiveTable;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nPromise = Package.promise.Promise;\nReact = Package['react-runtime'].React;\nReactDOM = Package['react-runtime'].ReactDOM;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// Sample.jsx                                                          //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nSample = React.createClass({                                           // 1\n    displayName: \"Sample\",                                             //\n                                                                       //\n    //    propTypes: {                                                 //\n    //        sample: React.PropTypes.object.isRequired                //\n    //    },                                                           //\n    render: function () {                                              // 5\n        return React.createElement(                                    // 6\n            \"li\",                                                      //\n            null,                                                      //\n            this.props.sample.cellSize                                 //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/Sample.jsx","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/Sample.jsx"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC;;;;;;AAIvB,UAAM,cAAG;AACL,eACI;;;YAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;SAAM,CACvC;KACL;CACJ,CAAC,CAAC,sE","file":"/Sample.jsx","sourcesContent":["Sample = React.createClass({\n//    propTypes: {\n//        sample: React.PropTypes.object.isRequired\n//    },\n    render() {\n        return (\n            <li>{this.props.sample.cellSize}</li>\n        );\n    }\n});\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// app.jsx                                                             //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nApp = React.createClass({                                              // 1\n    displayName: \"App\",                                                //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 3\n                                                                       //\n    getMeteorData: function () {                                       // 5\n        return {                                                       // 6\n            samples: Data.find({}).fetch()                             // 7\n        };                                                             //\n    },                                                                 //\n                                                                       //\n    renderData: function () {                                          // 11\n        return this.data.samples.map(function (sample) {               // 12\n            return React.createElement(Sample, { key: sample._id, Id: sample.Id, cellShape: sample.CellThickness, cellSize: sample.CellSize,\n                cellShape: sample.CellShape, marginalAdhesion: sample.MarginalAdhesion,\n                epithelialCellSize: sample.EpithelialCellSize, bareNuclei: sample.BareNuclei,\n                blandChromatin: sample.BlandChromatin, normalNucleoli: sample.NormalNucleoli,\n                mitoses: sample.Mitoses, klass: sample.Class });       // 17\n        });                                                            //\n    },                                                                 //\n    render: function () {                                              // 20\n        return React.createElement(                                    // 21\n            \"div\",                                                     //\n            { className: \"container\" },                                //\n            React.createElement(                                       //\n                \"header\",                                              //\n                null,                                                  //\n                React.createElement(                                   //\n                    \"h1\",                                              //\n                    null,                                              //\n                    \"Wisconsing Breast Cancer Dataset\"                 //\n                )                                                      //\n            ),                                                         //\n            React.createElement(                                       //\n                \"ul\",                                                  //\n                null,                                                  //\n                this.renderData()                                      //\n            )                                                          //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/app.jsx","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/app.jsx"],"names":[],"mappings":";;;;;;;;AAAA,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEpB,UAAM,EAAE,CAAC,eAAe,CAAC;;AAEzB,iBAAa,cAAG;AACZ,eAAO;AACL,mBAAO,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE;SAC/B;KACJ;;AAED,cAAU,cAAG;AACT,eAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,EAAK;AACrC,mBAAO,oBAAC,MAAM,IAAC,GAAG,EAAE,MAAM,CAAC,GAAI,EAAC,EAAE,EAAE,MAAM,CAAC,EAAG,EAAC,SAAS,EAAE,MAAM,CAAC,aAAc,EAAC,QAAQ,EAAE,MAAM,CAAC,QAAS;AAC3F,yBAAS,EAAE,MAAM,CAAC,SAAU,EAAC,gBAAgB,EAAE,MAAM,CAAC,gBAAiB;AACvE,kCAAkB,EAAE,MAAM,CAAC,kBAAmB,EAAC,UAAU,EAAE,MAAM,CAAC,UAAW;AAC7E,8BAAc,EAAE,MAAM,CAAC,cAAe,EAAC,cAAc,EAAE,MAAM,CAAC,cAAe;AAC7E,uBAAO,EAAE,MAAM,CAAC,OAAQ,EAAC,KAAK,EAAE,MAAM,CAAC,KAAM,GAAG,CAAC;SACnE,CAAC,CAAC;KACN;AACD,UAAM,cAAG;AACL,eACI;;cAAK,SAAS,EAAC,WAAW;YACxB;;;gBACE;;;;iBAAyC;aAClC;YAET;;;gBACG,IAAI,CAAC,UAAU,EAAE;aACf;SACD,CACR;KACL;CACJ,CAAC,CAAC,sE","file":"/app.jsx","sourcesContent":["App = React.createClass({\n\n    mixins: [ReactMeteorData],\n\n    getMeteorData() {\n        return {\n          samples: Data.find({}).fetch()\n        }\n    },\n\n    renderData() {\n        return this.data.samples.map((sample) => {\n            return <Sample key={sample._id} Id={sample.Id} cellShape={sample.CellThickness} cellSize={sample.CellSize}\n                           cellShape={sample.CellShape} marginalAdhesion={sample.MarginalAdhesion}\n                           epithelialCellSize={sample.EpithelialCellSize} bareNuclei={sample.BareNuclei}\n                           blandChromatin={sample.BlandChromatin} normalNucleoli={sample.NormalNucleoli}\n                           mitoses={sample.Mitoses} klass={sample.Class} />;\n        });\n    },\n    render() {\n        return (\n            <div className=\"container\">\n              <header>\n                <h1>Wisconsing Breast Cancer Dataset</h1>\n              </header>\n\n              <ul>\n                {this.renderData()}\n              </ul>\n            </div>\n        );\n    }\n});\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// d3-dashboard.jsx                                                    //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nData = new Mongo.Collection(\"BreastCancer\");                           // 1\n//Data = Mongo.Collection.get(\"BreastCancer\");                         //\nif (Meteor.isClient) {                                                 // 3\n                                                                       //\n  Meteor.startup(function () {                                         // 5\n    //    console.log(Data.find());                                    //\n    React.render(React.createElement(App, null), document.getElementById(\"render-target\"));\n  });                                                                  //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/d3-dashboard.jsx","sourceMap":{"version":3,"sources":["/d3-dashboard.jsx"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;;AAE5C,IAAI,MAAM,CAAC,QAAQ,EAAE;;AAEnB,QAAM,CAAC,OAAO,CAAC,YAAW;;AAExB,SAAK,CAAC,MAAM,CAAC,oBAAC,GAAG,OAAG,EAAE,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;GACjE,CAAC,CAAC;CACJ,wE","file":"/d3-dashboard.jsx","sourcesContent":["Data = new Mongo.Collection(\"BreastCancer\");\n//Data = Mongo.Collection.get(\"BreastCancer\");\nif (Meteor.isClient) {\n\n  Meteor.startup(function() {\n//    console.log(Data.find());\n    React.render(<App />, document.getElementById(\"render-target\"));\n  });\n}\n"]}}]